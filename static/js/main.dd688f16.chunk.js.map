{"version":3,"sources":["Components/theme/Global.js","Components/Popup.js","Components/Form.js","Components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","background","color","navbarShadow","borderInput","LightTheme","DarkTheme","Popup","props","status","setFalse","bmiResult","useState","message","setMessage","useEffect","className","onClick","width","fill","viewBox","xmlns","fillRule","d","clipRule","Form","openPopup","setOpenPopup","height","setHeight","weight","setWeight","result","setResult","type","required","value","onChange","e","eve","target","match","changeHeight","htmlFor","changeWeight","toFixed","Navbar","changeTheme","stroke","strokeLinecap","strokeLinejoin","strokeWidth","App","setTheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd688f16.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    // i could merge this bellow the styles,\r\n    // but i was found the bug and forced :))\r\n\r\n    body{\r\n        background-color: ${({ theme }) => theme.background};\r\n        color: ${({ theme }) => theme.color};\r\n    }\r\n\r\n    label{\r\n        background-color: ${({ theme }) => theme.background};\r\n        color: ${({ theme }) => theme.color};\r\n    }\r\n\r\n    .popup{\r\n        background-color: ${({ theme }) => theme.background};\r\n        color: ${({ theme }) => theme.color};\r\n    }\r\n\r\n    .navbar{\r\n        box-shadow: ${({ theme }) => theme.navbarShadow};\r\n    }\r\n\r\n    input{\r\n        border: ${({ theme }) => theme.borderInput};\r\n    }\r\n`\r\n\r\nexport const LightTheme = {\r\n    background: '#f3f3f3',\r\n    color: '#707070',\r\n    navbarShadow: ' 0 0 10px #dfdfdfaa',\r\n    borderInput: '1px solid #aaaaaa',\r\n}\r\n\r\nexport const DarkTheme = {\r\n    background: '#1e272e',\r\n    color: '#dfdfdf',\r\n    navbarShadow: ' 0 0 10px #212121dd',\r\n    borderInput: '1px solid #aaaaaa77',\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\n// import styles of popup\r\nimport './Popup.css';\r\n\r\nfunction Popup( props ) {\r\n    \r\n    let { status, setFalse, bmiResult } = props;\r\n\r\n    const [ message, setMessage ] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        if(bmiResult < 18.5){\r\n            setMessage('Under weight');\r\n        }\r\n        else if(bmiResult >= 18.5 && bmiResult <= 24.9){\r\n            setMessage('Normal weight');\r\n        }\r\n        else if(bmiResult >= 25 && bmiResult <= 29.9){\r\n            setMessage('Over weight');\r\n        }\r\n        else if(bmiResult >= 30){\r\n            setMessage('Very over weight');\r\n        }\r\n        \r\n    }, [ bmiResult ])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                status ?\r\n                <div className=\"popup-container\">\r\n                    <div className=\"popup\">\r\n                        <div className=\"popup-header\">\r\n                            <h4 className=\"popup-title\">your result:</h4>\r\n                            <button onClick={() => setFalse()}>\r\n                                <svg width=\"20px\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\"></path></svg>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"popup-body\">\r\n                            <h1>{ bmiResult }</h1>\r\n                            <h3>{ message }</h3>\r\n\r\n                            <button className=\"btn\" onClick={() => setFalse()}>\r\n                                OK! I get\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Popup;\r\n","import React, { useState } from 'react'\r\n\r\n// import component\r\nimport Popup from './Popup';\r\n\r\n// styles of component\r\nimport './Form.css';\r\n\r\nfunction Form() {\r\n\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n\r\n    // the states for store of height and weight value inputs\r\n    const [ height, setHeight ] = useState('');\r\n    const [ weight, setWeight ] = useState('');\r\n\r\n    const [ result, setResult ] = useState(0);\r\n\r\n    \r\n    const changeHeight = (eve) => {\r\n        let value = eve.target.value;\r\n        let regex = /^[0-9]*$/;\r\n\r\n        if(value.match(regex))\r\n            setHeight(value);\r\n    }\r\n\r\n    const changeWeight = (eve) => {\r\n        let value = eve.target.value;\r\n        let regex = /^[0-9]*$/;\r\n        \r\n        if(value.match(regex))\r\n            setWeight(value);\r\n    }\r\n\r\n    const calculate = () => {\r\n        let bmi = 0;\r\n        if(height !== '' && weight !== ''){\r\n            bmi = (weight / height / height) * 10000;\r\n            setResult(bmi.toFixed(1));\r\n            setOpenPopup(true);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <div>\r\n                <p>Input your Weight and Height and get your BMI.</p>\r\n                <p className=\"text-bold\">Please enter numeric data</p>\r\n                <div className=\"form-control\">\r\n                    <input \r\n                        type=\"text\" \r\n                        required \r\n                        value={height}\r\n                        onChange={(e) => changeHeight(e)}\r\n                    />\r\n                    <label htmlFor=\"height\">your Height (cm)</label>\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <input \r\n                        type=\"text\" \r\n                        required \r\n                        value={weight}\r\n                        onChange={(e) => changeWeight(e)}\r\n                    />\r\n                    <label htmlFor=\"weight\">your Weight (kg)</label>\r\n                </div>\r\n                <button className=\"btn\" onClick={() => calculate()}>\r\n                    <span>CALCULATE</span>\r\n                    <svg width=\"15px\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z\" clipRule=\"evenodd\"></path></svg>\r\n                </button>\r\n            </div>\r\n\r\n            <Popup \r\n                status={openPopup} \r\n                setFalse={() => setOpenPopup(false)} \r\n                bmiResult={result}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react'\r\n\r\n// import the style of component\r\nimport './navbar.css'\r\n\r\nfunction Navbar({ theme, changeTheme }) {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"app-name\">\r\n                BMI Calculator\r\n            </div>\r\n            <div className=\"theme-switcher\" onClick={() => changeTheme()}>\r\n\r\n                <span> </span>\r\n                \r\n                {\r\n                    !theme ?\r\n                    <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" /></svg>\r\n                    :\r\n                    <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" /></svg>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { LightTheme, DarkTheme, GlobalStyles } from './Components/theme/Global';\r\n\r\n// import components\r\nimport Form from './Components/Form';\r\nimport Navbar from './Components/Navbar';\r\n\r\n// import styles of app\r\nimport './App.css';\r\n\r\n\r\n\r\nfunction App () {\r\n\r\n    // if value of false, theme is light\r\n    // and if value of true, theme is dark\r\n    const [ theme, setTheme ] = useState(false);\r\n\r\n    const toggleTheme = () => {\r\n        setTheme(!theme);\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme ? DarkTheme : LightTheme}>\r\n            <GlobalStyles />\r\n            <div className=\"app\">\r\n                <Navbar changeTheme={toggleTheme} theme={theme}/>\r\n\r\n                <Form />\r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}